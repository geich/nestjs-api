version: '3'

services:
    pgsql:
        image: postgres:alpine
        ports:
          - '5432:5432'
        container_name: 'pgsql'
        restart: always
        volumes:
          - pg-data:/var/lib/postgresql/data
        environment:
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASS
          POSTGRES_DB: $DB_DATABASE
        networks:
            - app-network

    pgsql-dev:  
        image: postgres:alpine
        ports:
          - '5433:5432'
        container_name: 'pgsql-dev'
        restart: always
        volumes:
          - pg-data-dev:/var/lib/postgresql/data
        environment:
          POSTGRES_USER: $DB_USER
          POSTGRES_PASSWORD: $DB_PASS
          POSTGRES_DB: $DB_DATABASE
        networks:
            - app-network

    dev:
        build:
          context: .
        image: nodejs
        container_name: nestjs-dev
        restart: unless-stopped
        environment:
            NODE_ENV: development
            DB_HOST: pgsql-dev
        ports:
            - "3001:3001"
        volumes:
            - .:/app
            - node_modules:/app/node_modules
        command: npm run start:dev
        depends_on:
            - pgsql-dev
        networks:
            - app-network

    test: 
        container_name: api-test
        build:
            context: .
            dockerfile: Dockerfile
        command: npm run test
        
networks:
    app-network:
        driver: bridge

volumes:
    pg-data:
    pg-data-dev:
    node_modules:
